-- üîë SCRIPTKEY check (2-hour rotation)
getgenv().SCRIPTKEY = getgenv().SCRIPTKEY or "ZORI-0"
local hour = os.date("!*t").hour
local validKey = "ZORI-" .. math.floor(hour / 2)

if getgenv().SCRIPTKEY ~= validKey then
    game.Players.LocalPlayer:Kick("‚ùå Invalid key. Check Discord for current key.")
    return
end

-- üß† Game Place ID and script mapping
local placeId = game.PlaceId
local scriptMap = {
    [3082002798] = "https://raw.githubusercontent.com/zerolamar/Obfuscate-Scripts/main/T-Titans%20Battlegrounds.lua", -- T-Titans Battlegrounds
}

-- üéØ Load the correct script
local scriptURL = scriptMap[placeId]

if not scriptURL then
    game.Players.LocalPlayer:Kick("‚ö†Ô∏è Unsupported game. Script will not run here.")
    return
end

-- üß™ Fetch and run script safely
local response, fetchErr = pcall(function()
    return game:HttpGet(scriptURL)
end)

if not response or not fetchErr or fetchErr:match("404") then
    game.Players.LocalPlayer:Kick("‚ùå Script not found or GitHub returned error.")
    return
end

local loadedFunc, loadErr = loadstring(fetchErr)
if not loadedFunc then
    game.Players.LocalPlayer:Kick("‚ùå Script has syntax error. Fix your .lua file.")
    return
end

-- ‚úÖ Run the loaded script
local success, execErr = pcall(loadedFunc)
if not success then
    game.Players.LocalPlayer:Kick("‚ùå Runtime error: " .. tostring(execErr))
end
